package UI.Panel;

import DAO.DaoImple.BanbidaDAO;
import DAO.DaoImple.BookingDAO;
import DAO.DaoImple.ChitiethoadonDao;
import DAO.DaoImple.DichVuDAO;
import DAO.DaoImple.HoaDonDAO;
import DAO.DaoImple.LoaibanDAO;
import MODEl.Banbida;
import MODEl.Booking;
import MODEl.Chitiethoadon;
import MODEl.Dichvu;
import MODEl.Hoadon;
import MODEl.Loaiban;
import Xauth.phanquyen;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import com.itextpdf.text.BaseColor;
import java.awt.Color;
import java.awt.Dimension;
import java.util.List;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import java.awt.GridLayout;
import java.sql.Timestamp;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfWriter;
import com.sun.mail.imap.ACL;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.sql.Date;
import java.io.FileOutputStream;
import java.net.URL;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.concurrent.TimeUnit;
import javax.imageio.ImageIO;
import javax.swing.JTextArea;

/**
 *
 * @author HP
 */
public class BanBidaPanel extends javax.swing.JPanel {

    private Hoadon hd;
    private Banbida bd;
    private List<Dichvu> danhSachDV;
    private Hoadon hoaDonTamThoi = null;
    private String currentMaBan = null;

    /**
     * Creates new form QLban
     */
    public BanBidaPanel() {
        initComponents();
        loadDanhSachBan();
        loadDichVuVaoComboBox();
    }

    ///
private String layThoiGianHienTai() {
        Timestamp now = new Timestamp(System.currentTimeMillis());
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss dd/MM/yyyy");
        return sdf.format(now);
    }

    private String taoMaHoaDon(String maBan) {
        return "HD" + maBan + "_" + (System.currentTimeMillis() % 1000000);
    }

    private String formatVND(double amount) {
        return String.format("%,.0f VND", amount);
    }

    private void loadDanhSachBan() {
        // Set layout chu·∫©n (GridLayout s·∫Ω wrap t·ªët h∆°n trong ScrollPane so v·ªõi FlowLayout)
        Pn3bang.setLayout(new GridLayout(0, 4, 10, 10));
        Pn3bangVIP.setLayout(new GridLayout(0, 4, 10, 10));
        Pnlo.setLayout(new GridLayout(0, 4, 10, 10));
        PnloVIP.setLayout(new GridLayout(0, 4, 10, 10));

        // X√≥a c≈©
        Pn3bang.removeAll();
        Pn3bangVIP.removeAll();
        Pnlo.removeAll();
        PnloVIP.removeAll();

        try {
            BanbidaDAO banDAO = new BanbidaDAO();
            LoaibanDAO loaibanDAO = new LoaibanDAO();
            BookingDAO bookingDAO = new BookingDAO();  // ƒë·∫∑t ·ªü ƒë√¢y 1 l·∫ßn, d√πng l·∫°i

            List<Banbida> danhSachBan = banDAO.getAll();
            Map<String, Loaiban> loaibanMap = loaibanDAO.getMapLoaiBan();

            for (Banbida ban : danhSachBan) {
                String maBan = ban.getMaBan();
                String tenBan = ban.getTenBan();
                String maLoaiBan = ban.getMaLoaiBan();
                String tinhTrang = ban.getTinhTrang();
                double giaTheoGio = ban.getGiaTheoGio();
                int tuoiBan = ban.getTuoiBan();
                String ghiChu = ban.getGhiChu();

                // T√™n lo·∫°i t·ª´ map
                String tenLoai = "";
                if (loaibanMap.containsKey(maLoaiBan)) {
                    tenLoai = loaibanMap.get(maLoaiBan).getTenLoai().toLowerCase();
                }

                // T·∫°o n√∫t b√†n
                JButton btnBan = new JButton(tenBan);
                btnBan.setPreferredSize(new Dimension(100, 80));

                // Ki·ªÉm tra n·∫øu b√†n ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t tr∆∞·ªõc (tr·∫°ng th√°i v·∫´n l√† "Trong" nh∆∞ng ƒë√£ c√≥ booking)
                Booking thongTinBooking = bookingDAO.getBookingGanNhat(maBan);

                boolean daDatTruoc = false;
                if (thongTinBooking != null && thongTinBooking.getTrangThai().equals("ChuaNhan")) {
                    daDatTruoc = true;
                }

                // M√†u theo t√¨nh tr·∫°ng + ƒë·∫∑t tr∆∞·ªõc
                if ("BaoTri".equals(tinhTrang)) {
                    btnBan.setBackground(new Color(153, 153, 153));
                    btnBan.setForeground(Color.WHITE);
                    btnBan.setToolTipText("B√†n ƒëang b·∫£o tr√¨");
                } else if (daDatTruoc) {
                    btnBan.setBackground(Color.ORANGE);
                    btnBan.setForeground(Color.BLACK);
                    btnBan.setToolTipText("<html><b>ƒê√£ ƒë·∫∑t tr∆∞·ªõc</b><br>"
                            + "Kh√°ch: " + thongTinBooking.getTenKhach() + "<br>"
                            + "SƒêT: " + thongTinBooking.getSdt() + "<br>"
                            + "Nh·∫≠n l√∫c: " + thongTinBooking.getGioNhan() + "</html>");
                } else {
                    switch (tinhTrang) {
                        case "DangSuDung" -> {
                            btnBan.setBackground(new Color(0, 255, 0));
                            btnBan.setForeground(Color.WHITE);
                            btnBan.setToolTipText("ƒêang s·ª≠ d·ª•ng");
                        }
                        case "Trong" -> {
                            btnBan.setBackground(Color.WHITE);
                            btnBan.setForeground(Color.BLACK);
                            btnBan.setToolTipText("B√†n tr·ªëng");
                        }
                        default -> {
                            btnBan.setBackground(Color.LIGHT_GRAY);
                            btnBan.setForeground(Color.BLACK);
                            btnBan.setToolTipText("Kh√¥ng r√µ tr·∫°ng th√°i");
                        }
                    }
                }

                // G·∫Øn s·ª± ki·ªán click
                btnBan.addActionListener(e -> chonBan(maBan, tenBan, maLoaiBan, tinhTrang, giaTheoGio, tuoiBan, ghiChu));

                // Ph√¢n lo·∫°i panel
                if (tenLoai.contains("l·ªó") && tenLoai.contains("vip")) {
                    PnloVIP.add(btnBan);
                } else if (tenLoai.contains("3 bƒÉng") && tenLoai.contains("vip")) {
                    Pn3bangVIP.add(btnBan);
                } else if (tenLoai.contains("3 bƒÉng")) {
                    Pn3bang.add(btnBan);
                } else if (tenLoai.contains("vip")) {
                    Pn3bangVIP.add(btnBan);
                } else {
                    Pnlo.add(btnBan);
                }
            }

            // Refresh panels
            Pnlo.revalidate();
            Pnlo.repaint();
            Pn3bang.revalidate();
            Pn3bang.repaint();
            PnloVIP.revalidate();
            PnloVIP.repaint();
            Pn3bangVIP.revalidate();
            Pn3bangVIP.repaint();

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "L·ªói khi t·∫£i danh s√°ch b√†n: " + e.getMessage(), "L·ªói", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void chonBan(String maBan, String tenBan, String maLoaiBan, String tinhTrang, double giaTheoGio, int tuoiBan, String ghiChu) {
        this.currentMaBan = maBan;
        jTabbedPane1.setSelectedIndex(1); // Chuy·ªÉn tab sang s·ª≠ d·ª•ng

        lblmaban.setText(tenBan);
        lblKhuvuc.setText(tinhTrang);
        txtGhichu.setText(ghiChu != null ? ghiChu : "");

        // L·∫•y t√™n lo·∫°i b√†n
        LoaibanDAO loaibanDAO = new LoaibanDAO();
        String tenLoai = loaibanDAO.getTenLoaiByMa(maLoaiBan);
        lblLoaiban.setText(tenLoai != null ? tenLoai : "Kh√¥ng r√µ");

        // Popup th√¥ng tin b√†n
        JOptionPane.showMessageDialog(this,
                "üìå T√™n b√†n: " + tenBan
                + "\nüî∏ Lo·∫°i b√†n: " + (tenLoai != null ? tenLoai : "Kh√¥ng r√µ")
                + "\nüìç T√¨nh tr·∫°ng: " + tinhTrang
                + "\nüìù Ghi ch√∫: " + (ghiChu != null ? ghiChu : "Kh√¥ng"),
                "Th√¥ng tin b√†n",
                JOptionPane.INFORMATION_MESSAGE
        );

        // Ki·ªÉm tra h√≥a ƒë∆°n ƒëang m·ªü
        HoaDonDAO hdDAO = new HoaDonDAO();
        Hoadon hd = hdDAO.getHoaDonDangMoByBan(currentMaBan);

        if (tinhTrang.equalsIgnoreCase("Trong") && hd == null) {
            // ‚úÖ B√†n ƒëang tr·ªëng v√† ch∆∞a c√≥ h√≥a ƒë∆°n ‚Üí t·∫°o m·ªõi
            String maHDMoi = taoMaHoaDon(maBan);
            Hoadon hoaDonMoi = new Hoadon();
            hoaDonMoi.setMaHD(maHDMoi);
            hoaDonMoi.setMaBan(maBan);
            hoaDonMoi.setTrangThai("Ch·ªù b·∫Øt ƒë·∫ßu");
            hoaDonMoi.setNgayTao(new java.sql.Date(System.currentTimeMillis())); // ‚úÖ Quan tr·ªçng

            boolean insertResult = new HoaDonDAO().insert(hoaDonMoi); // üëâ ch√®n v√†o DB

            if (insertResult) {
                // ‚úÖ L∆∞u v√†o bi·∫øn t·∫°m
                this.hoaDonTamThoi = hoaDonMoi;
                lblmaHD.setText(maHDMoi);
            } else {
                JOptionPane.showMessageDialog(this, "‚ùå Kh√¥ng th·ªÉ t·∫°o h√≥a ƒë∆°n m·ªõi!", "L·ªói", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Reset giao di·ªán
            jTextField1.setText("");
            jTextField2.setText("");
            lblTiengio.setText("0.0");
            lblOrder.setText("0.0");
            lblTongtien.setText("0.0");
            lblTienban.setText(String.valueOf(giaTheoGio));

            jButton1.setEnabled(true);  // B·∫Øt ƒë·∫ßu
            jButton2.setEnabled(false); // K·∫øt th√∫c

        } else if (hd != null) {
            // ‚úÖ B√†n ƒëang s·ª≠ d·ª•ng ho·∫∑c c√≥ h√≥a ƒë∆°n m·ªü
            lblmaHD.setText(hd.getMaHD());
            jTextField1.setText(hd.getThoiGianBD() != null ? hd.getThoiGianBD().toString() : "");
            jTextField2.setText(hd.getThoiGianKT() != null ? hd.getThoiGianKT().toString() : "");
            lblTienban.setText(String.valueOf(hd.getTienGio()));
            lblOrder.setText(String.valueOf(hd.getTienDV()));
            lblTongtien.setText(String.valueOf(hd.getTongTien()));
            lblTiengio.setText(String.valueOf(giaTheoGio));
            txtGhichu.setText(hd.getGhiChu());

            this.hoaDonTamThoi = hd; // ‚úÖ ƒê·ªÉ ketThucChoi() d√πng

            jButton1.setEnabled(false);
            jButton2.setEnabled(true); // sau confirm
        } else {
            // ‚ùó Kh√¥ng thao t√°c ƒë∆∞·ª£c v·ªõi tr·∫°ng th√°i b·∫•t th∆∞·ªùng
            JOptionPane.showMessageDialog(this,
                    "‚ö†Ô∏è Kh√¥ng thao t√°c ƒë∆∞·ª£c v·ªõi tr·∫°ng th√°i b√†n: " + tinhTrang,
                    "Th√¥ng b√°o",
                    JOptionPane.WARNING_MESSAGE
            );
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
    }

    private void batDauChoi() {
        HoaDonDAO hds = new HoaDonDAO();
        String maBan = currentMaBan;

        if (maBan == null || maBan.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "‚ùå Ch∆∞a ch·ªçn b√†n!", "Th√¥ng b√°o", JOptionPane.WARNING_MESSAGE);
            return;
        }

        BanbidaDAO banDao = new BanbidaDAO();
        Banbida ban = banDao.getByMaBan(maBan);
        String tinhTrang = ban != null ? ban.getTinhTrang() : null;
        if ("DangSuDung".equalsIgnoreCase(tinhTrang)) {
            JOptionPane.showMessageDialog(this, "‚ö†Ô∏è B√†n n√†y ƒëang ƒë∆∞·ª£c s·ª≠ d·ª•ng!", "Th√¥ng b√°o", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String maHD = "HD" + maBan + "_" + (System.currentTimeMillis() % 1000000);
        Timestamp gioBD = new Timestamp(System.currentTimeMillis());
        String maNV = phanquyen.user.getMaNV();
        String thoiGianBD = layThoiGianHienTai();
        jTextField1.setText(thoiGianBD);  // Kh√¥ng c·∫ßn format l·∫°i n·ªØa
        Hoadon hoadonMoi = new Hoadon(
                maHD, maNV, maBan, gioBD, null, 0.0, "ChuaThanhToan",
                new Date(System.currentTimeMillis()), 0.0, 0.0, 0.0, "", null
        );
        jButton1.setEnabled(false);
        jButton2.setEnabled(true);
        jButton16.setEnabled(false);
        // L∆∞u h√≥a ƒë∆°n tr∆∞·ªõc
        if (hds.insert(hoadonMoi)) {
            banDao.capNhatTinhTrang(maBan, "DangSuDung");
            hoaDonTamThoi = hoadonMoi; // ‚úÖ G√°n l·∫°i cho to√†n c·ª•c
            JOptionPane.showMessageDialog(this, "‚úÖ B·∫Øt ƒë·∫ßu t√≠nh gi·ªù cho b√†n " + maBan);
            loadDanhSachBan();
        } else {
            JOptionPane.showMessageDialog(this, "‚ùå L·ªói khi t·∫°o h√≥a ƒë∆°n!", "L·ªói", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void thanhToan() {
        if (currentMaBan == null || currentMaBan.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "‚ùå Ch∆∞a ch·ªçn b√†n ƒë·ªÉ thanh to√°n!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return;
        }

        HoaDonDAO hdDAO = new HoaDonDAO();
        BanbidaDAO banDAO = new BanbidaDAO();

        // L·∫•y h√≥a ƒë∆°n ƒëang m·ªü c·ªßa b√†n
        //  Hoadon hd = hdDAO.getHoaDonDangMoByBan(currentMaBan);
        if (hd == null) {
            hd = hoaDonTamThoi;
        }
        if (hd == null) {
            JOptionPane.showMessageDialog(this, "‚ùå Kh√¥ng c√≥ h√≥a ƒë∆°n c·∫ßn thanh to√°n!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (hd.getThoiGianKT() == null) {
            JOptionPane.showMessageDialog(this, "‚ùå Ch∆∞a k·∫øt th√∫c phi√™n ch∆°i!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // T√≠nh l·∫°i ti·ªÅn gi·ªù
        Timestamp bd = hd.getThoiGianBD();
        Timestamp kt = hd.getThoiGianKT();
        long millis = kt.getTime() - bd.getTime();
        double gio = millis / (1000.0 * 60 * 60); // gi·ªù

        double giaGio = banDAO.getGiaTheoMaBan(hd.getMaBan());
        double tienGio = gio * giaGio;

        // L·∫•y t·ª´ UI
        double tienDV = parseDoubleSafely(lblOrder.getText());
        double tongTien = tienGio + tienDV;

        int xacNhan = JOptionPane.showConfirmDialog(this,
                "X√°c nh·∫≠n thanh to√°n b√†n " + currentMaBan + "?\nT·ªïng ti·ªÅn: " + formatVND(tongTien),
                "X√°c nh·∫≠n thanh to√°n", JOptionPane.YES_NO_OPTION);

        if (xacNhan != JOptionPane.YES_OPTION) {
            return;
        }

        // C·∫≠p nh·∫≠t h√≥a ƒë∆°n
        hd.setTienGio(tienGio);
        hd.setTienDV(tienDV);
        hd.setTongTien(tongTien);
        hd.setTrangThai("DaThanhToan");
        hd.setGhiChu(txtGhichu.getText());

        try {
            hdDAO.capNhatHoaDon(hd); // c·∫≠p nh·∫≠t DB
            banDAO.capNhatTinhTrang(hd.getMaBan(), "Trong"); // c·∫≠p nh·∫≠t b√†n

            // In h√≥a ƒë∆°n
            Banbida ban = banDAO.getByMaBan(currentMaBan);
            List<Dichvu> danhSachDV = new DichVuDAO().getDichVuTheoHoaDon(hd.getMaHD());

            JOptionPane.showMessageDialog(this, "‚úÖ Thanh to√°n th√†nh c√¥ng!\nT·ªïng ti·ªÅn: " + formatVND(tongTien));

            // Reset UI
            currentMaBan = null;
            hoaDonTamThoi = null;
            txtGiamgia.setText("");
            jTextField1.setText("");
            jTextField2.setText("");
            lblTongtien.setText("0.0");
            lblTienban.setText("0.0");
            lblTiengio.setText("0.0");
            lblOrder.setText("0.0");
            txtGhichu.setText("");

            loadDanhSachBan();
            jButton1.setEnabled(true);
            jButton2.setEnabled(false);
            jButton16.setEnabled(true);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "‚ùå L·ªói khi thanh to√°n: " + e.getMessage(), "L·ªói", JOptionPane.ERROR_MESSAGE);
        }
    }

// H√†m ph·ª• ƒë·ªÉ parse Double an to√†n
    private double parseDoubleSafely(String input) {
        try {
            return Double.parseDouble(input.trim());
        } catch (Exception e) {
            return 0.0;
        }
    }

    ///
public String taoBillBida(JTextArea txtaBill, String pdfPath) {
        HoaDonDAO hoaDonDAO = new HoaDonDAO();
        BanbidaDAO banBidaDAO = new BanbidaDAO();
        ChitiethoadonDao chiTietDAO = new ChitiethoadonDao();
        DichVuDAO dichVuDAO = new DichVuDAO();

        String maBan = currentMaBan;
        Hoadon hd = hoaDonDAO.getHoaDonDangMoByBan(maBan);
        if (hd == null) {
            return "‚ùå Kh√¥ng t√¨m th·∫•y h√≥a ƒë∆°n ƒëang m·ªü cho b√†n " + currentMaBan + "!";
        }

        Banbida bd = banBidaDAO.getByMaBan(currentMaBan);
        if (bd == null) {
            return "‚ùå Kh√¥ng t√¨m th·∫•y th√¥ng tin b√†n!";
        }

        List<Chitiethoadon> chiTietList = chiTietDAO.getChiTietByMaHD(hd.getMaHD());
        if (hd.getThoiGianKT() == null || hd.getThoiGianBD() == null) {
            return "‚ùå H√≥a ƒë∆°n ch∆∞a k·∫øt th√∫c!";
        }

        long millis = hd.getThoiGianKT().getTime() - hd.getThoiGianBD().getTime();
        long soPhut = Math.max(1, TimeUnit.MILLISECONDS.toMinutes(millis));
        double tienGio = soPhut * (bd.getGiaTheoGio() / 60.0);

        double tongDV = 0;
        for (Chitiethoadon ct : chiTietList) {
            Dichvu dv = dichVuDAO.findByMaDV(ct.getMaDV());
            if (dv != null && ct.getSoLuong() > 0) {
                tongDV += dv.getDonGia() * ct.getSoLuong();
            }
        }

        double tongTien = tienGio + tongDV - hd.getGiamGia();
        hd.setTienDV(tongDV);
        hd.setTongTien(tongTien);

        DecimalFormat df = new DecimalFormat("#,##0");
        StringBuilder sb = new StringBuilder();
        sb.append(String.format("M√£ Hƒê       : %s\n", hd.getMaHD()));
        sb.append(String.format("B√†n         : %s (%s)\n", bd.getTenBan(), bd.getMaLoaiBan()));
        sb.append(String.format("Th·ªùi gian   : %s -> %s\n", hd.getThoiGianBD(), hd.getThoiGianKT()));
        sb.append(String.format("T.gi·ªù ch∆°i  : %d ph√∫t\n", soPhut));
        sb.append(String.format("ƒê∆°n gi√°     : %s VND/gi·ªù\n", df.format(bd.getGiaTheoGio())));
        sb.append(String.format("Ti·ªÅn gi·ªù    : %s VND\n", df.format(tienGio)));

        if (tongDV > 0) {
            sb.append("\n----------- D·ªäCH V·ª§ -----------\n");
            for (Chitiethoadon ct : chiTietList) {
                Dichvu dv = dichVuDAO.findByMaDV(ct.getMaDV());
                if (dv != null && ct.getSoLuong() > 0) {
                    double thanhTien = dv.getDonGia() * ct.getSoLuong();
                    sb.append(String.format("%-20s x%-2d = %s VND\n",
                            dv.getTenDV(), ct.getSoLuong(), df.format(thanhTien)));
                }
            }
            sb.append(String.format("T·ªïng d·ªãch v·ª• : %s VND\n", df.format(tongDV)));
        }
        if (hd.getGhiChu() != null && !hd.getGhiChu().trim().isEmpty()) {
            sb.append(String.format("Ghi ch√∫      : %s\n", hd.getGhiChu().trim()));
        }
        sb.append(String.format("Gi·∫£m gi√°      : %s VND\n", df.format(hd.getGiamGia())));
        sb.append("------------------------------------\n");
        sb.append(String.format("T·ªîNG C·ªòNG     : %s VND\n", df.format(tongTien)));
        sb.append("====================================\n");
        sb.append("     C·∫¢M ∆†N QU√ù KH√ÅCH, H·∫∏N G·∫∂P L·∫†I!\n");

        String billContent = sb.toString();
        if (txtaBill != null) {
            txtaBill.setText("=========== H√ìA ƒê∆†N BIDA ===========\n" + billContent);
        }

        // T·∫°o PDF n·∫øu c√≥ ƒë∆∞·ªùng d·∫´n
        if (pdfPath != null && !pdfPath.trim().isEmpty()) {
            try {
                File file = new File(pdfPath);
                File parent = file.getParentFile();
                if (parent != null && !parent.exists()) {
                    parent.mkdirs();
                }

                Document document = new Document();
                PdfWriter.getInstance(document, new FileOutputStream(file));
                document.open();

                BaseFont baseFont = BaseFont.createFont("src/static/NotoSans_Condensed-Regular.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                Font font = new Font(baseFont, 11);
                Font fontBold = new Font(baseFont, 13, Font.BOLD);
                Font fontItalic = new Font(baseFont, 10, Font.ITALIC);

                document.add(new Paragraph("=========== H√ìA ƒê∆†N BIDA ===========", fontBold));
                for (String line : billContent.split("\n")) {
                    document.add(new Paragraph(line, font));
                }

                // QR thanh to√°n
                String qrUrl = "https://img.vietqr.io/image/MB-0325734524-compact.png?amount=" + (int) tongTien;
                try {
                    Image qrImage = Image.getInstance(new URL(qrUrl));
                    qrImage.scaleToFit(150, 150);
                    qrImage.setAlignment(Element.ALIGN_CENTER);
                    document.add(new Paragraph("\nQu√©t m√£ ƒë·ªÉ thanh to√°n:", fontBold));
                    document.add(qrImage);
                } catch (Exception e) {
                    document.add(new Paragraph("\n[QR l·ªói - kh√¥ng th·ªÉ t·∫£i m√£ QR thanh to√°n]", fontItalic));
                }

                document.close();
            } catch (Exception e) {
                e.printStackTrace();
                return "‚ùå L·ªói khi t·∫°o PDF: " + e.getMessage();
            }
        }

        return billContent;
    }

    // ‚úÖ H√†m t·∫°o m√£ QR v√† chuy·ªÉn th√†nh Image ƒë·ªÉ ch√®n v√†o PDF
    public static Image generateQRCodeImage(String text, int width, int height) throws Exception {
        QRCodeWriter qrCodeWriter = new QRCodeWriter();
        BitMatrix bitMatrix = qrCodeWriter.encode(text, BarcodeFormat.QR_CODE, width, height);
        BufferedImage bufferedImage = MatrixToImageWriter.toBufferedImage(bitMatrix);

        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ImageIO.write(bufferedImage, "png", baos);
        return Image.getInstance(baos.toByteArray());
    }

    private void loadDichVuVaoComboBox() {
        cbb.removeAllItems();
        cbb.addItem("Ch·ªçn d·ªãch v·ª•...");
        DichVuDAO dao = new DichVuDAO();
        try {
            List<Dichvu> dsTenDV = dao.getAll();
            if (dsTenDV != null && !dsTenDV.isEmpty()) {
                for (Dichvu dv : dsTenDV) {
                    cbb.addItem(dv.getTenDV());
                }
            } else {
                System.err.println("Kh√¥ng c√≥ d·ªãch v·ª• n√†o ƒë∆∞·ª£c t√¨m th·∫•y!");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null,
                    "‚ùå L·ªói khi t·∫£i danh s√°ch d·ªãch v·ª•:\n" + e.getMessage(),
                    "L·ªói", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void xuLyThemDichVu() {
        String maBan = currentMaBan;
        if (maBan == null || maBan.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "‚ùå Ch∆∞a ch·ªçn b√†n!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // L·∫•y m√£ h√≥a ƒë∆°n ƒëang m·ªü theo b√†n
        HoaDonDAO hoaDonDAO = new HoaDonDAO();
        Hoadon hoaDon = hoaDonDAO.getHoaDonDangMoByBan(maBan);
        if (hoaDon == null) {
            JOptionPane.showMessageDialog(this, "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y h√≥a ƒë∆°n ƒëang m·ªü cho b√†n n√†y!", "Th√¥ng b√°o", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String maHD = hoaDon.getMaHD();

        // L·∫•y th√¥ng tin t·ª´ combobox v√† spinner
        String tenDVChon = cbb.getSelectedItem().toString();
        int soLuong = (int) jSpinner1.getValue();

        if (tenDVChon == null || tenDVChon.isEmpty()) {
            JOptionPane.showMessageDialog(this, "‚ùå Ch∆∞a ch·ªçn d·ªãch v·ª•!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (soLuong <= 0) {
            JOptionPane.showMessageDialog(this, "‚ùå S·ªë l∆∞·ª£ng kh√¥ng h·ª£p l·ªá!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // T√¨m d·ªãch v·ª• theo t√™n
        DichVuDAO dvDAO = new DichVuDAO();
        Dichvu dvChon = dvDAO.getByTen(tenDVChon); // B·∫°n c·∫ßn c√≥ h√†m n√†y trong DAO

        if (dvChon == null) {
            JOptionPane.showMessageDialog(this, "‚ùå Kh√¥ng t√¨m th·∫•y d·ªãch v·ª• ƒë√£ ch·ªçn!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Th√™m v√†o chi ti·∫øt h√≥a ƒë∆°n
        new ChitiethoadonDao().themDichVuVaoHoaDon(maHD, dvChon.getMaDV(), soLuong, dvChon.getDonGia());
        // C·∫≠p nh·∫≠t v√†o b·∫£ng hoadon
        double tienDV = dvChon.getDonGia() * soLuong;
        hoaDonDAO.capNhatThongTinDichVu(maHD, dvChon.getMaDV(), tienDV);
        lblOrder.setText(String.format("%.1f", tienDV)); // ‚úÖ Hi·ªÉn th·ªã Ti·ªÅn DV ra label
        JOptionPane.showMessageDialog(this, "‚úÖ ƒê√£ th√™m d·ªãch v·ª• v√†o h√≥a ƒë∆°n!");
    }

    private void ketThucChoi() {
        String maBan = currentMaBan;
        if (maBan == null || maBan.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "‚ùå Ch∆∞a ch·ªçn b√†n!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return;
        }

        HoaDonDAO dao = new HoaDonDAO();
        Hoadon hoadon = dao.getHoaDonDangMoByBan(maBan);

        if (hoadon == null) {
            JOptionPane.showMessageDialog(this, "‚ùå Kh√¥ng t√¨m th·∫•y h√≥a ƒë∆°n ƒëang s·ª≠ d·ª•ng cho b√†n n√†y!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Timestamp thoiGianBD = hoadon.getThoiGianBD();
        if (thoiGianBD == null) {
            JOptionPane.showMessageDialog(this, "‚ùå H√≥a ƒë∆°n ch∆∞a c√≥ th·ªùi gian b·∫Øt ƒë·∫ßu!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Timestamp thoiGianKT = new Timestamp(System.currentTimeMillis());
        jTextField2.setText(new SimpleDateFormat("HH:mm:ss dd/MM/yyyy").format(thoiGianKT));

        long millis = thoiGianKT.getTime() - thoiGianBD.getTime();
        long soPhut = Math.max(1, millis / (60 * 1000)); // ‚úÖ T√≠nh ph√∫t
        double donGia = new BanbidaDAO().getGiaTheoMaBan(maBan) / 60.0;
        double tienGio = soPhut * donGia;
        double tienDV = new ChitiethoadonDao().tinhTongTienDV(hoadon.getMaHD());
        double tongTienTruocGiam = tienGio + tienDV;

        // ‚úÖ L·∫•y gi·∫£m gi√° t·ª´ txtGiamgia
        String giamGiaStr = txtGiamgia.getText().trim();
        double giamGia = 0;
        if (!giamGiaStr.isEmpty()) {
            try {
                giamGia = Double.parseDouble(giamGiaStr);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "‚ùå Gi·∫£m gi√° kh√¥ng h·ª£p l·ªá!", "L·ªói", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        // ‚úÖ T√≠nh gi·∫£m
        double soTienGiam = tongTienTruocGiam * (giamGia / 100.0);
        double tongTien = tongTienTruocGiam - soTienGiam;

        String ghiChu = txtGhichu.getText().trim(); // ‚úÖ N·∫øu b·∫°n mu·ªën d√πng ghi ch√∫

        lblTiengio.setText(String.format("%.1f", tienGio));
        lblTongtien.setText(String.format("%.1f", tongTien));

        // ‚úÖ C·∫≠p nh·∫≠t v√†o h√≥a ƒë∆°n
        hoadon.setThoiGianKT(thoiGianKT);
        hoadon.setTienGio(tienGio);
        hoadon.setTienDV(tienDV);
        hoadon.setTongTien(tongTien);
        hoadon.setTrangThai("ChuaThanhToan");
        hoadon.setGiamGia(giamGia); // ‚úÖ C·∫≠p nh·∫≠t gi·∫£m gi√°

        this.hd = hoadon;
        this.hoaDonTamThoi = hoadon;

        boolean thanhCong = dao.capNhatHoaDon(hoadon);
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        jButton16.setEnabled(true);

        if (thanhCong) {
            // ‚úÖ Tr·∫£ b√†n v·ªÅ tr·∫°ng th√°i "Trong"
            BanbidaDAO banDao = new BanbidaDAO();
            banDao.capNhatTinhTrang(maBan, "Trong");
            loadDanhSachBan();

            JOptionPane.showMessageDialog(this,
                    "‚úÖ K·∫øt th√∫c phi√™n ch∆°i.\nT·ªïng th·ªùi gian: " + soPhut + " ph√∫t\nT·ªïng ti·ªÅn: " + String.format("%.0f VND", tongTien),
                    "Ho√†n t·∫•t", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "‚ùå L·ªói khi c·∫≠p nh·∫≠t h√≥a ƒë∆°n!", "L·ªói", JOptionPane.ERROR_MESSAGE);
        }

        // ‚úÖ Th√¥ng tin ƒë·ªÉ in h√≥a ƒë∆°n
        Banbida bd = new BanbidaDAO().getByMaBan(maBan);
        List<Dichvu> dsDV = new DichVuDAO().getDichVuByHoaDon(hoadon.getMaHD());
    }

    ///
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Pn3bangVIP = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        PnloVIP = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Pn3bang = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Pnlo = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblmaHD = new javax.swing.JLabel();
        lblTgain = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblmaban = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbb = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jButton15 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        lblTiengio = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtGhichu = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        lblTongtien = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lblOrder = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        lblTienban = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtGiamgia = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        lblLoaiban = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        lblKhuvuc = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtaBill = new javax.swing.JTextArea();

        setPreferredSize(new java.awt.Dimension(1620, 1080));

        jPanel1.setPreferredSize(new java.awt.Dimension(1620, 1080));

        Pn3bangVIP.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel26.setText("B√†n ba bƒÉng V.I.P:");

        javax.swing.GroupLayout Pn3bangVIPLayout = new javax.swing.GroupLayout(Pn3bangVIP);
        Pn3bangVIP.setLayout(Pn3bangVIPLayout);
        Pn3bangVIPLayout.setHorizontalGroup(
            Pn3bangVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pn3bangVIPLayout.createSequentialGroup()
                .addComponent(jLabel26)
                .addGap(0, 660, Short.MAX_VALUE))
        );
        Pn3bangVIPLayout.setVerticalGroup(
            Pn3bangVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pn3bangVIPLayout.createSequentialGroup()
                .addComponent(jLabel26)
                .addGap(0, 690, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(Pn3bangVIP);

        PnloVIP.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel23.setText("B√†n l·ªó V.I.P:");

        javax.swing.GroupLayout PnloVIPLayout = new javax.swing.GroupLayout(PnloVIP);
        PnloVIP.setLayout(PnloVIPLayout);
        PnloVIPLayout.setHorizontalGroup(
            PnloVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnloVIPLayout.createSequentialGroup()
                .addComponent(jLabel23)
                .addGap(0, 713, Short.MAX_VALUE))
        );
        PnloVIPLayout.setVerticalGroup(
            PnloVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnloVIPLayout.createSequentialGroup()
                .addComponent(jLabel23)
                .addGap(0, 503, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(PnloVIP);

        Pn3bang.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel25.setText("B√†n ba bƒÉng th∆∞·ªùng:");

        javax.swing.GroupLayout Pn3bangLayout = new javax.swing.GroupLayout(Pn3bang);
        Pn3bang.setLayout(Pn3bangLayout);
        Pn3bangLayout.setHorizontalGroup(
            Pn3bangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pn3bangLayout.createSequentialGroup()
                .addComponent(jLabel25)
                .addGap(0, 691, Short.MAX_VALUE))
        );
        Pn3bangLayout.setVerticalGroup(
            Pn3bangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pn3bangLayout.createSequentialGroup()
                .addComponent(jLabel25)
                .addGap(0, 474, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(Pn3bang);

        Pnlo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setText("B√†n l·ªó th∆∞·ªùng:");

        javax.swing.GroupLayout PnloLayout = new javax.swing.GroupLayout(Pnlo);
        Pnlo.setLayout(PnloLayout);
        PnloLayout.setHorizontalGroup(
            PnloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnloLayout.createSequentialGroup()
                .addComponent(jLabel22)
                .addGap(0, 693, Short.MAX_VALUE))
        );
        PnloLayout.setVerticalGroup(
            PnloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnloLayout.createSequentialGroup()
                .addComponent(jLabel22)
                .addGap(0, 484, Short.MAX_VALUE))
        );

        jScrollPane5.setViewportView(Pnlo);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE))
                .addContainerGap(302, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(246, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ph√≤ng B√†n ", jPanel1);

        jLabel2.setText("Th·ªùi gian b·∫Øt ƒë·∫ßu:");

        jLabel3.setText("Th·ªùi gian k·∫øt th√∫c:");

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("B·∫Øt ƒê·∫ßu");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 0));
        jButton2.setText("K·∫øt Th√∫c");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "T√™n SP", "S·ªë l∆∞·ª£ng", "ƒê∆°n gi√°", "Th√†nh ti·ªÅn"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Th·ªùi gian t·∫°o h√≥a ƒë∆°n:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("M√£ h√≥a ƒë∆°n:");

        lblmaHD.setText("jLabel6");

        lblTgain.setText("jLabel6");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("B√†n:");

        lblmaban.setText("jLabel6");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Menu:");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("ƒê·ªì ƒÉn & th·ª©c u·ªëng:");

        cbb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("S·ªë l∆∞·ª£ng:");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jSpinner1.setRequestFocusEnabled(false);

        jButton15.setBackground(new java.awt.Color(0, 204, 102));
        jButton15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton15.setForeground(new java.awt.Color(255, 255, 255));
        jButton15.setText("X√°c Nh·∫≠n");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbb, 0, 167, Short.MAX_VALUE)
                            .addComponent(jSpinner1))
                        .addGap(18, 18, 18)
                        .addComponent(jButton15)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cbb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel14.setText("Ti·ªÅn gi·ªù:");

        lblTiengio.setText("0.0");

        jLabel18.setText("Ghi ch√∫:");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("T·ªïng ti·ªÅn:");

        lblTongtien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongtien.setForeground(new java.awt.Color(255, 0, 0));
        lblTongtien.setText("0.0");

        jLabel20.setText("T·ªïng ti·ªÅn order:\n");

        lblOrder.setText("0.0");

        jButton16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton16.setText("Thanh to√°n");
        jButton16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton16MouseClicked(evt);
            }
        });

        jLabel24.setText("Ti·ªÅn b√†n:");

        lblTienban.setText("0.0");

        jLabel8.setText("Gi·∫£m gi√°:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTongtien))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtGhichu, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(jButton16))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblTiengio))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblOrder)))
                                .addGap(173, 173, 173)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtGiamgia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblTienban)))))))
                .addContainerGap(496, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(lblTienban))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(lblTiengio)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(lblOrder)
                    .addComponent(jLabel8)
                    .addComponent(txtGiamgia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtGhichu, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jButton16, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(lblTongtien))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel27.setText("Lo·∫°i B√†n:");

        lblLoaiban.setText("jLabel6");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel29.setText("T√¨nh tr·∫°ng:");

        lblKhuvuc.setText("jLabel6");

        txtaBill.setColumns(20);
        txtaBill.setRows(5);
        jScrollPane6.setViewportView(txtaBill);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(jTextField1)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))
                        .addGap(0, 628, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblKhuvuc, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblmaban, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLoaiban, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblTgain, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblmaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane6)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1)
                                .addComponent(jButton2))
                            .addGap(34, 34, 34)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(lblmaHD))
                            .addGap(12, 12, 12)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(lblmaban))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel27)
                                .addComponent(lblLoaiban))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel29)
                                .addComponent(lblKhuvuc))
                            .addGap(11, 11, 11)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)
                        .addComponent(lblTgain)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6))
                .addContainerGap(200, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Qu·∫£n l√Ω b√†n", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton16MouseClicked
        String maBan = currentMaBan;
        HoaDonDAO dao = new HoaDonDAO();
        Hoadon hoadon = dao.getHoaDonDangMoByBan(maBan);

        if (hoadon == null) {
            JOptionPane.showMessageDialog(this, "‚ùå Kh√¥ng t√¨m th·∫•y h√≥a ƒë∆°n ƒë·ªÉ in!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return;
        }

        ChitiethoadonDao cthdDAO = new ChitiethoadonDao();
        List<Chitiethoadon> chiTietList = cthdDAO.getChiTietByMaHD(hoadon.getMaHD());

        DichVuDAO dvDAO = new DichVuDAO();
        List<Dichvu> danhSachDVInBill = dvDAO.getDichVuTheoHoaDon(hoadon.getMaHD());

        BanbidaDAO banDao = new BanbidaDAO();
        Banbida bd = banDao.getByMaBan(maBan);

        // T·∫°o ƒë∆∞·ªùng d·∫´n l∆∞u h√≥a ƒë∆°n ra file PDF
        String userHome = System.getProperty("user.home");
        String pdfPath = userHome + File.separator + "Documents" + File.separator + "hoadon_" + hoadon.getMaHD() + ".pdf";

        // G·ªçi ph∆∞∆°ng th·ª©c t·∫°o bill
        String result = taoBillBida(txtaBill, pdfPath);

        if (result.startsWith("‚ùå")) {
            JOptionPane.showMessageDialog(this, result, "L·ªói In H√≥a ƒê∆°n", JOptionPane.ERROR_MESSAGE);
        } else {
            System.out.println("ƒê∆∞·ªùng d·∫´n file PDF: " + pdfPath);
            JOptionPane.showMessageDialog(this, "‚úÖ H√≥a ƒë∆°n ƒë√£ in v√† l∆∞u t·∫°i:\n" + pdfPath);

            try {
                File pdfFile = new File(pdfPath);
                if (pdfFile.exists()) {
                    java.awt.Desktop.getDesktop().open(pdfFile);
                }
            } catch (java.io.IOException ex) {
                System.err.println("Kh√¥ng th·ªÉ m·ªü PDF: " + ex.getMessage());
            }
        }

        // G·ªçi thanh to√°n
        thanhToan();
    }//GEN-LAST:event_jButton16MouseClicked

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        xuLyThemDichVu();
    }//GEN-LAST:event_jButton15ActionPerformed
    private void cbbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ketThucChoi();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        batDauChoi();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Pn3bang;
    private javax.swing.JPanel Pn3bangVIP;
    private javax.swing.JPanel Pnlo;
    private javax.swing.JPanel PnloVIP;
    private javax.swing.JComboBox<String> cbb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblKhuvuc;
    private javax.swing.JLabel lblLoaiban;
    private javax.swing.JLabel lblOrder;
    private javax.swing.JLabel lblTgain;
    private javax.swing.JLabel lblTienban;
    private javax.swing.JLabel lblTiengio;
    private javax.swing.JLabel lblTongtien;
    private javax.swing.JLabel lblmaHD;
    private javax.swing.JLabel lblmaban;
    private javax.swing.JTextField txtGhichu;
    private javax.swing.JTextField txtGiamgia;
    private javax.swing.JTextArea txtaBill;
    // End of variables declaration//GEN-END:variables
}
